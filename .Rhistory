setwd("C:/Users/Matthewclark989/Desktop/TimeSeriesApp")
library(shiny); runApp('timeseries_App.R')
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
Full_AR_Results <- read_csv("./Full_AR_Results.csv")
setwd("C:/Users/Matthewclark989/Desktop/TimeSeriesApp")
ErrorMetrics <- read_csv("./Error Metrics - Sheet1 .csv")
Full_AR_Results <- read_csv("./Full_AR_Results.csv")
ErrorMetrics <- read_csv("./Error Metrics - Sheet1.csv")
runApp('timeseries_App.R')
?datatable
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
Parks<- read_csv("./Yearly Visitation Data - Sheet1.csv")
runApp('timeseries_App.R')
load(file="AR5ALL.rda")
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
GV2<-grid.arrange( arrangeGrob(p1 + theme(legend.position="top"),
p2 + theme(legend.position="top"),
nrow=1),left=label, bottom=label2)
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
df <- data.frame(DateTime = ymd("2010-07-01") + c(0:8760) * hours(2), series1 = rnorm(8761), series2 = rnorm(8761, 100))
install.packages("lubridate")
library(lubridate)
df <- data.frame(DateTime = ymd("2010-07-01") + c(0:8760) * hours(2), series1 = rnorm(8761), series2 = rnorm(8761, 100))
#' Create the two plots.
plot1 <- df %>%
select(DateTime, series1) %>%
na.omit() %>%
ggplot() +
geom_point(aes(x = DateTime, y = series1), size = 0.5, alpha = 0.75) +
ylab("Red dots / m") +
theme_minimal() +
theme(axis.title.x = element_blank())
plot2 <- df %>%
select(DateTime, series2) %>%
na.omit() %>%
ggplot() +
geom_point(aes(x = DateTime, y = series2), size = 0.5, alpha = 0.75) +
ylab("Blue drops / L") +
theme_minimal() +
theme(axis.title.x = element_blank())
grid.newpage()
grid.draw(rbind(ggplotGrob(plot1), ggplotGrob(plot2), size = "last"))
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
?grid.arrange
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
runApp('timeseries_App.R')
load(file="AR5all.rda")
AR5all
AR5all
GOMall
load(file="GOMall.rda")
GOMall
load(file="AR5all.rda")
AR5all
load(file="./AR5all.rda")
AR5all
load(file="./AR5all.rda")
AR5all
runApp('timeseries_App.R')
load("C:/Users/Matthewclark989/Desktop/TimeSeriesApp/AR5all.rda")
AR5all
AR5ALL<-load(file="./AR5all.rda")
AR5ALL
load(file="AR5all.rda")
ARMALL
AR5ALL
runApp('timeseries_App.R')
load(file="AR5all.rda")
load(file="./AR5all.rda")
setwd("C:/Users/Matthewclark989/Desktop/TimeSeriesApp")
load(file="./AR5all.rda")
AR5ALL
load(file="ARMall.rda")
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
load(file="./GLMall.rda")
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
setwd("~/TimeSeriesApp")
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
Full_GL_Results <- read_csv("./Full_GL_Results.csv")
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
library(shiny)
library(shinythemes)
library(rstan)
library(rstanarm)
library(readr)
library(gridExtra)
library(gtable)
library(grid)
library(ggplot2)
library(dplyr)
library(leaflet)
library(DT)
library(markdown)
library(knitr)
library(shinythemes)
library(plotly)
Full_GL_Results <- read_csv("./Full_GL_Results.csv")
arcolinner<-rgb(246/255,84/255,106/255,alpha=0.6)
arcolouter<-rgb(169/255, 24/255, 24/255,alpha=0.6)
plot_ly(
Full_GL_Results,x = ~Visitation, y = ~Median,
marker=list(size = 20,
color = gocolinner,
line = list(color =gocolouter,
width = 3)),
text = ~paste("Park: ", Park, "<br>Year: ", Year)) %>%
layout(title="Google Trends Forecast Accuracy")
gocolinner<-rgb(158/255,154/255,200/255,alpha=0.6)
gocolouter<-rgb(84/255,39/255,143/255,alpha=0.6)
plot_ly(
Full_GL_Results,x = ~Visitation, y = ~Median,
marker=list(size = 20,
color = gocolinner,
line = list(color =gocolouter,
width = 3)),
text = ~paste("Park: ", Park, "<br>Year: ", Year)) %>%
layout(title="Google Trends Forecast Accuracy")
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
gocolinner<-rgb(158/255,154/255,200/255,alpha=0.6)
gocolouter<-rgb(84/255,39/255,143/255,alpha=0.6)
plot_ly(
Full_GL_Results,x = ~Visitation, y = ~Median,
marker=list(size = 20,
color = gocolinner,
line = list(color =gocolouter,
width = 3)),
text = ~paste("Park: ", Park, "<br>Year: ", Year)) %>%
layout(title="Google Trends Forecast Accuracy", yaxis = list(range = c(0, 25000000))
)
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
Parks
Parks<- read_csv("Yearly Visitation Data - Sheet1.csv")
library(readr)
Parks<- read_csv("Yearly Visitation Data - Sheet1.csv")
Parks<-Parks[Parks$Park != "NPSA",]
Parks
tsdfGL<-data.frame(matrix(nrow=5*length(Names), ncol=8))
colnames(tsdfGL) <- c("Median", "LowerBound25","LowerBound50","UpperBound25","UpperBound50","Visitation","Year","Park")
tsdfGL$Year=rep(2008:2012, 57)
tsdfGL$Park=rep(Names, each=5)
tsdfGL$Visitation=Parks[Parks$Year==2008:2012,]$Visitation
tsdfGL<-rbind(tsdfGL,Full_GL_Results)
tsdfGL<-data.frame(matrix(nrow=5*length(Names), ncol=8))
Names<-unique(Parks$Park)
tsdfGL<-data.frame(matrix(nrow=5*length(Names), ncol=8))
colnames(tsdfGL) <- c("Median", "LowerBound25","LowerBound50","UpperBound25","UpperBound50","Visitation","Year","Park")
tsdfGL$Year=rep(2008:2012, 57)
tsdfGL$Park=rep(Names, each=5)
tsdfGL$Visitation=Parks[Parks$Year==2008:2012,]$Visitation
tsdfGL<-rbind(tsdfGL,Full_GL_Results)
Full_GL_Results
tsdfGL
Full_GO_Results
Full_GO_Results <- read_csv("./Full_GO_Results.csv")
Full_GO_Results
Full_AR5_Results <- read_csv("./Full_AR5_Results.csv")
Full_GL_Results$X1<-NULL
tsdfGL<-rbind(tsdfGL,Full_GL_Results)
Full_GL_Results <- read_csv("./Full_GL_Results.csv")
Full_GL_Results$X1<-NULL
Full_GO_Results <- read_csv("./Full_GO_Results.csv")
Full_GO_Results$X1<-NULL
Full_AR5_Results <- read_csv("./Full_AR5_Results.csv")
Full_AR5_Results$X1<-NULL
tsdfGO<-data.frame(matrix(nrow=5*length(Names), ncol=8))
colnames(tsdfGO) <- c("Median", "LowerBound25","LowerBound50","UpperBound25","UpperBound50","Visitation","Year","Park")
tsdfGO$Year=rep(2008:2012, 57)
tsdfGO$Park=rep(Names, each=5)
tsdfGL$Visitation=Parks[Parks$Year==2008:2012,]$Visitation
tsdfGO<-rbind(tsdfGO,Full_GO_Results)
tsdfGL$Visitation
tsdfGL
tsdfGO$Visitation=Parks[Parks$Year==2008:2012,]$Visitation
tsdfGO
tsdfGO<-data.frame(matrix(nrow=5*length(Names), ncol=8))
colnames(tsdfGO) <- c("Median", "LowerBound25","LowerBound50","UpperBound25","UpperBound50","Visitation","Year","Park")
tsdfGO$Year=rep(2008:2012, 57)
tsdfGO$Park=rep(Names, each=5)
tsdfGO$Visitation=Parks[Parks$Year==2008:2012,]$Visitation
tsdfGO<-rbind(tsdfGO,Full_GO_Results)
library(ggplot2)
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
library(shiny); runApp('C:/Users/Matthewclark989/Desktop/TimeSeriesApp/timeseries_App.R')
Full_GL_Results <- read_csv("./Full_GL_Results.csv")
Full_GL_Results$X1<-NULL
Full_GL_Results
